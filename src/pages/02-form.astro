---
import Layout from "../layouts/Layout.astro";
---

<Layout title="02. Tags (Groq)">
  <main>
    <form
      action="/save-note"
      method="POST"
      class="max-w-lg mx-auto mt-8 p-4 bg-white rounded-lg shadow-md"
    >
      <div class="mb-4">
        <label for="note" class="block text-sm font-medium text-gray-700 mb-2"
          >Nota del viaje:</label
        >
        <textarea
          id="note"
          name="note"
          rows="6"
          class="w-full px-3 py-2 text-gray-700 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent"
          placeholder="Escribe aquí tus experiencias..."></textarea>
      </div>
      <div class="mb-4">
        <label for="tags" class="block text-sm font-medium text-gray-700 mb-2"
          >Tags generados por IA:</label
        >
        <input
          type="text"
          id="tags"
          name="tags"
          class="w-full px-3 py-2 text-gray-700 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent"
          placeholder="Tags separados por comas..."
        />
        <button
          type="button"
          id="generate-tags"
          class="mt-2 px-4 py-2 bg-green-500 text-white font-semibold rounded-md shadow-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
          >Generar tags con IA</button
        >
      </div>
      <div class="flex justify-end">
        <button
          type="submit"
          class="px-4 py-2 bg-blue-500 text-white font-semibold rounded-md shadow-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75"
          onclick="preventDefault(); alert('Guardado!');">Guardar nota</button
        >
      </div>
      <div class="mb-4">
        <p id="token-usage" class=" text-gray-900"></p>
        <ul class="text-gray-900">
          <li>Costo en OpenAI: <span id="price-usage"></span></li>
          <li>Costo en Groq: 0</li>
          <li>Costo en Ollama: 0</li>
        </ul>
        <p id="time-usage" class=" text-gray-900"></p>
      </div>
    </form>
  </main>
</Layout>

<script>
  document
    .getElementById("generate-tags")
    .addEventListener("click", async () => {
      const note = document.getElementById("note").value;
      const generateButton = document.getElementById("generate-tags");
      generateButton.disabled = true;
      generateButton.textContent = "Generando tags...";

      if (note.trim() !== "") {
        try {
          const response = await fetch("/api/tags-groq", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ text: note }),
          });

          if (!response.ok) {
            throw new Error("Error en la generación de tags");
          }

          const data = await response.json();
          document.getElementById("tags").value = data.tags.join(", ");

          if (data.usage) {
            document.getElementById("token-usage").textContent =
              `Tokens: ${data.usage.total_tokens}`;
            document.getElementById("price-usage").textContent =
              `${(data.usage.total_tokens / 1000) * 0.005}`;
            document.getElementById("time-usage").textContent =
              `Tiempo: ${data.usage.total_time} segundos`;
          }
        } catch (error) {
          console.error("Error generating tags:", error);
        } finally {
          generateButton.disabled = false;
          generateButton.textContent = "Generar tags con IA";
        }
      } else {
        generateButton.disabled = false;
        generateButton.textContent = "Generar tags con IA";
      }
    });
</script>
